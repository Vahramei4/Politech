class Graph:
    def __init__(self, matrix):
        self.matrix = matrix

    def print(self):
        for row in self.matrix:
            print(row)

    def calcShortestWay(self, fromVertex, toVertex):
        d = self.matrix
        n = len(self.matrix)
        for i in range(1, n + 1):
            for j in range(0, n - 1):
                for k in range(0, n - 1):
                    if (d[j][k] > d[j][i - 1] + d[i - 1][k]):
                        d[j][k] = d[j][i - 1] + d[i - 1][k]
        return d[fromVertex-1][toVertex-1]

graph = Graph([
    # 1    2    3    4    5    6    7    8    9    10   11   12   13
     [999, 33,  999, 999, 999, 999, 999, 42,  40,  999, 999, 999, 21 ], # 1
     [33,  999, 999, 42,  999, 63,  72,  78,  999, 999, 999, 999, 46 ], # 2
     [999, 999, 999, 999, 6,   32,  33,  76,  15,  999, 29,  999, 48 ], # 3
     [999, 42,  999, 999, 42,  999, 999, 999, 999, 999, 999, 999, 75 ], # 4
     [999, 999, 6,   42,  999, 999, 999, 999, 999, 999, 27,  999, 63 ], # 5
     [999, 63,  32,  999, 999, 999, 999, 999, 27,  999, 999, 29,  999], # 6
     [999, 72,  33,  999, 999, 999, 999, 999, 53,  8,   999, 999, 999], # 7
     [42,  78,  76,  999, 999, 999, 999, 999, 59,  999, 999, 999, 999], # 8
     [40,  999, 15,  999, 999, 27,  53,  59,  999, 999, 36,  999, 999], # 9
     [999, 999, 999, 999, 999, 999, 8,   999, 999, 999, 999, 999, 999], # 10
     [999, 999, 29,  999, 27,  999, 999, 999, 36,  999, 999, 999, 999], # 11
     [999, 999, 999, 999, 999, 29,  999, 999, 999, 999, 999, 999, 999], # 12
     [21,  46,  48,  75,  63,  999, 999, 999, 999, 999, 999, 999, 999], # 13
])


print(graph.calcShortestWay(1, 10))
